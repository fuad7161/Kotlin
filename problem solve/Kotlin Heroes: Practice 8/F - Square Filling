fun main(){
    val a = arrayListOf<Array<Int>>()
    var (n,m) = readLine()!!.split(' ').map { it.toInt() }
    var ar = Array(n){IntArray(m)}
    var vis = Array(n){IntArray(m)}
    for(i in 0..n-1){
        var tem = readLine()!!.split(' ').map { it.toInt() }
        for(j in 0..m-1){
            ar[i][j] = tem[j]
            vis[i][j] = 0
        }
    }

    /*for(i in 0..n-1){
        for(j in 0..m-1){
            print(ar[i][j])
            print(" ")
        }
        println()
    }*/
    val ans = mutableSetOf<Pair<Int,Int>>()
    var f = true
    for(i in 0..n-1){
        for(j in 0..m-1){
            if(ar[i][j] == 1 && vis[i][j] == 0){
                if(ck(i,j,n,m)){
                    if(ar[i][j]==1&&ar[i+1][j]==1&&ar[i][j+1]==1&&ar[i+1][j+1]==1){
                        vis[i][j]==1
                        vis[i+1][j]==1
                        vis[i][j+1]==1
                        vis[i+1][j+1]==1
                        ans.add(Pair(i + 1, j + 1))
                        continue
                    }
                }
                if(ck(i-1,j,n,m)){
                    if(ar[i-1][j]==1&&ar[i][j]==1&&ar[i-1][j+1]==1&&ar[i][j+1]==1){
                        vis[i-1][j]==1
                        vis[i][j]==1
                        vis[i-1][j+1]==1
                        vis[i][j+1]==1
                        ans.add(Pair(i,j+1))
                        continue
                    }
                }
                if(ck(i,j-1,n,m)){
                    if(ar[i][j-1]==1&&ar[i+1][j-1]==1&&ar[i][j]==1&&ar[i+1][j]==1){
                        vis[i][j-1]==1
                        vis[i+1][j-1]==1
                        vis[i][j]==1
                        vis[i+1][j]==1
                        ans.add(Pair(i+1,j))
                        continue
                    }
                }
                if(ck(i-1,j-1,n,m)){
                    if(ar[i-1][j-1]==1&&ar[i][j-1]==1&&ar[i-1][j]==1&&ar[i][j]==1){
                        vis[i-1][j-1]==1
                        vis[i][j-1]==1
                        vis[i-1][j]==1
                        vis[i][j]==1
                        ans.add(Pair(i,j))
                        continue
                    }
                }
                f = false
            }
            if (f == false)break
        }
    }
    if(f == false){
        println(-1)
    }else{
        println(ans.size)
        for(i in ans){
            print(i.first)
            print(" ")
            println(i.second)
        }
    }
}

fun ck(x:Int , y:Int,n:Int,m:Int):Boolean{
    var x1 = x+1
    var y1 = y+1
    if(x>=0 && x<n && y>=0 && y<m){
        if(x1 >= 0&&x1<n&&y>=0&&y<m){
            if(x>=0&&x<n&&y1>=0&&y1<m){
                if(x1>=0&&x1<n&&y1>=0&&y1<m){
                    return  true
                }
            }
        }
    }
    return false
}
